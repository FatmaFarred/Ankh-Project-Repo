import 'package:ankh_project/domain/entities/product_management_entity.dart';
import 'used_details_model.dart';

class ProductManagementModel extends ProductManagementEntity {
  ProductManagementModel({
    required super.id,
    required super.title,
    required super.description,
    required super.commission,
    required super.requiredPoints,
    super.topBrandName,
    required super.make,
    required super.model,
    required super.category,
    required super.year,
    required super.mileage,
    required super.color,
    required super.code,
    required super.isUsedVehicle,
    required super.status,
    required super.price,
    required super.rating,
    required super.views,
    required super.transmission,
    required super.fuelType,
    required super.driveType,
    required super.engineType,
    required super.horsepower,
    required super.batteryCapacity,
    required super.videoUrl,
    required super.imageUrls,
    required super.createdAt,
    required super.lastEditedAt,
    super.usedDetails,
  });

  factory ProductManagementModel.fromJson(Map<String, dynamic> json) {
    return ProductManagementModel(
      id: json['id'] as int,
      title: json['title'] as String,
      description: json['description'] as String,
      commission: json['commission'] as int,
      requiredPoints: json['requiredPoints'] as int,
      topBrandName: json['topBrandName'] as String?,
      make: json['make'] as String,
      model: json['model'] as String,
      category: json['category'] as String,
      year: json['year'] as int,
      mileage: json['mileage'] as int,
      color: json['color'] as String,
      code: json['code'] as String,
      isUsedVehicle: json['isUsedVehicle'] as bool,
      status: json['status'] as String,
      price: json['price'] as String,
      rating: json['rating'] as int,
      views: json['views'] as int,
      transmission: json['transmission'] as String,
      fuelType: json['fuelType'] as String,
      driveType: json['driveType'] as String,
      engineType: json['engineType'] as String,
      horsepower: json['horsepower'] as int,
      batteryCapacity: json['batteryCapacity'] as String,
      videoUrl: List<String>.from(json['videoUrl'] ?? []),
      imageUrls: List<String>.from(json['imageUrls'] ?? []),
      createdAt: DateTime.parse(json['createdAt']),
      lastEditedAt: DateTime.parse(json['lastEditedAt']),
      usedDetails: json['usedDetails'] != null
          ? UsedDetailsModel.fromJson(json['usedDetails'])
          : null,
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'title': title,
      'description': description,
      'commission': commission,
      'requiredPoints': requiredPoints,
      'topBrandName': topBrandName,
      'make': make,
      'model': model,
      'category': category,
      'year': year,
      'mileage': mileage,
      'color': color,
      'code': code,
      'isUsedVehicle': isUsedVehicle,
      'status': status,
      'price': price,
      'rating': rating,
      'views': views,
      'transmission': transmission,
      'fuelType': fuelType,
      'driveType': driveType,
      'engineType': engineType,
      'horsepower': horsepower,
      'batteryCapacity': batteryCapacity,
      'videoUrl': videoUrl,
      'imageUrls': imageUrls,
      'createdAt': createdAt.toIso8601String(),
      'lastEditedAt': lastEditedAt.toIso8601String(),
      // Cast usedDetails to UsedDetailsModel before calling toJson
      'usedDetails': (usedDetails as UsedDetailsModel?)?.toJson(),
    };
  }
}
